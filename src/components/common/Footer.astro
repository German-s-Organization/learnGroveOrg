---
import { SITE } from "../../config";
import { Icon } from 'astro-icon/components';
import { getLangFromUrl } from "../../i18n/utils";

const lang = getLangFromUrl(Astro.url);


//Defines the types for the items from the config file
interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}
interface Links {
  title?: string;
  links: Array<Link>;
}
export interface Props {
  links: Array<Links>;
  secondaryLinks: Array<Link>;
  socialLinks: Array<Link>;
  footNote?: string;
  theme?: string;
}

const { socialLinks = [], secondaryLinks = [], links = [], footNote = ''} = Astro.props;
---
<footer class="flex flex-col bg-black dark:bg-gray-800 mt-4 py-4 -mx-4">
  <div class="w-full flex flex-col items-center">
      <div class="">
        <div class="mb-2 text-center text-text1-DM  md:w-full">
          <a class="inline-block font-bold text-xl" href={SITE.url}>{SITE?.name}</a>
        </div>
      </div>

      <div class="flex justify-center text-center max-w-screen-sm w-full my-2 md:my-4">
        <!-- <div class="border-4 border-purple-800 flex justify-center items-center text-sm text-muted text-center text-text1-DM "> -->
          {
            secondaryLinks.map(({ text, href }) => (
            <div class="flex text-center items-center justify-center w-1/4 text-text1-DM"> 
              <div class="flex justify-center items-center">
                <a
                  class="text-muted text-center text-sm hover:text-gray-700 dark:text-text1-DM hover:underline transition duration-150 ease-in-out"
                  href={`/${lang}/${href}`}
                  set:html={text}
                />
              </div>
            </div> 
            ))
          }
        <!-- </div> -->
        {
          links.map(({ title, links }) => (
            <div class="flex justify-center items-center w-1/4">
              {links && Array.isArray(links) && links.length > 0 && (
                <ul class="text-sm">
                  {links.map(({ text, href, ariaLabel }) => (
                    <li class="text-text1-DM">
                      <a
                        class="text-muted hover:text-gray-700 hover:underline dark:text-text1-DM transition duration-150 ease-in-out"
                        href={href}
                        aria-label={ariaLabel}
                      >
                        <Fragment set:html={text} />
                      </a>
                    </li>
                  ))}
                </ul>
              )}
            </div>
          ))
        }
      </div>
    </div>
    
    <div class="text-center text-text1-DM">
      {
        socialLinks?.length ? (
          <ul class="flex justify-center mb-2">
            {socialLinks.map(({ ariaLabel, href, text, icon }) => (
              <li>
                <a
                  class="text-muted text-text1-DM dark:text-text1-DM hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2 inline-flex items-center"
                  aria-label={ariaLabel}
                  href={href}
                >
                  {icon && <Icon name={icon} class="w-5 h-5" />}
                  <Fragment set:html={text}/>
                </a>
              </li>
            ))}
          </ul>
        ) : (
          ''
        )
      }

      <div class="text-sm dark:text-slate-400 text-text1-DM">
        <Fragment set:html={footNote} />
      </div>
    </div>
  </div>
</footer>